j7 The program gracefully handles missing files, permission errors, and encoding issues. The logic for splitting and cleaning words is clear and well-structured,I would suggest replacing the manual isalnum() filtering with a regular expression to streamline the process of cleaning words and make it more efficient.
7m The use of re.findall to extract words is concise , and the script includes proper exception handling for common errors like missing files.One improvement would be to avoid using a broad Exception block, as this can make debugging harder by masking unexpected errors.
c8 The script efficiently uses a regular expression to isolate words while ignoring numbers and symbols. The inclusion of exception handling for missing files and permission errors is a good addition he error messages could be more descriptive, especially when handling permission issues.
sp The program handles file reading properly, converting the text to lowercase and cleaning punctuation for accurate word counting. Its simplicity makes it accessible. the script could replace the manual punctuation removal with the str.translate method, that could is more efficient.
84 The program is straightforward and uses sets effectively to ensure only unique words are counted. It also handles file input. One issue is the formatting of the error messages, the placeholders in the f-strings are not being resolved properly.
mq The program includes basic exception handling, and runs smoothly. The logic iterates over characters instead of splitting the text into words. 
tx The program uses a set to identify unique words, and works just fine. One thing that i did notice it cannot process other files without modifying the code.